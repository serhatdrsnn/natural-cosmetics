@model List<NaturalCosmeticsECommerce.Models.Order>

@{
    ViewData["Title"] = "Sipariş Geçmişi";
}

<h2>Sipariş Geçmişiniz</h2>

@if (!Model.Any())
{
    <div class="alert alert-info">Henüz siparişiniz bulunmuyor.</div>
}
else
{
    <div class="order-list">
        @foreach (var order in Model)
        {
            <div class="card mb-4">
                <div class="card-header d-flex justify-content-between align-items-center @GetStatusBgClass(order.Status)">
                    <div>
                        <strong>Sipariş No:</strong> @order.OrderId
                        <span class="ms-3"><strong>Tarih:</strong> @order.OrderDate.ToString("dd.MM.yyyy HH:mm")</span>
                    </div>
                    <div>
                        <span class="badge @GetStatusBadgeClass(order.Status)">
                            @GetStatusText(order.Status)
                        </span>
                    </div>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6">
                            <p><strong>Toplam Tutar:</strong> @order.TotalAmount.ToString("C")</p>
                        </div>
                        <div class="col-md-6">
                            <p><strong>Teslimat Adresi:</strong> @order.ShippingAddress</p>
                        </div>
                    </div>

                    <h5 class="mt-3">Ürünler</h5>
                    <table class="table table-sm">
                        <thead>
                            <tr>
                                <th>Ürün</th>
                                <th>Adet</th>
                                <th>Birim Fiyat</th>
                                <th>Toplam</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in order.Items)
                            {
                                <tr>
                                    <td>@item.Product.Name</td>
                                    <td>@item.Quantity</td>
                                    <td>@item.Product.Price.ToString("C")</td>
                                    <td>@(item.Product.Price * item.Quantity).ToString("C")</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        }
    </div>
}

@functions {
    string GetStatusBgClass(OrderStatus status) => status switch
    {
        OrderStatus.Completed => "bg-success bg-opacity-10",
        OrderStatus.Cancelled => "bg-danger bg-opacity-10",
        _ => "bg-warning bg-opacity-10"
    };

    string GetStatusBadgeClass(OrderStatus status) => status switch
    {
        OrderStatus.Completed => "bg-success",
        OrderStatus.Cancelled => "bg-danger",
        _ => "bg-warning"
    };

    string GetStatusText(OrderStatus status) => status switch
    {
        OrderStatus.Pending => "Beklemede",
        OrderStatus.Completed => "Tamamlandı",
        OrderStatus.Cancelled => "İptal Edildi",
        _ => status.ToString()
    };
}

<style>
    .order-list .card {
        border-radius: 8px;
        overflow: hidden;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }
    .order-list .card-header {
        font-weight: 500;
    }
</style>
